//
//  SignInPresenter.swift
//  Pods
//
//  Created Rystem Asqar on 4/28/24.
//  Copyright © 2024 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Dastan Makhutov @mchutov
//

import UIKit

final class SignInPresenter {
    weak private var view: SignInViewProtocol?
    var interactor: SignInInteractorProtocol?
    private let router: SignInWireframeProtocol

    init(interface: SignInViewProtocol, interactor: SignInInteractorProtocol?, router: SignInWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }
}
extension SignInPresenter: SignInPresenterProtocol {
    
    func setEmailProperty(_ isValid: Bool) {
        interactor?.isValidEmail = isValid
    }
    
    func setPasswordProperty(_ isValid: Bool) {
        interactor?.isValidPassword = isValid
    }
    
    func isValidEmail() -> Bool? {
        interactor?.isValidEmail
    }
    
    func isValidPassword() -> Bool? {
        interactor?.isValidPassword
    }
    
    func didTapLoginButton(withEmail email: String?, password: String?) {
        guard let email = email, let password = password else { return }
        interactor?.loginUser(email: email, password: password)
    }
    
    func loginSuccessful() {
        router.routeToDashboardViewController()
    }
    
    func loginError(_ error: Error) {
        let alertController = UIAlertController(title: nil, message: "Ошибка авторизации", preferredStyle: .alert)
        let retryAction = UIAlertAction(title: "Попробовать снова", style: .default)
        alertController.addAction(retryAction)
        view?.showAlert(alert: alertController)
    }
}
